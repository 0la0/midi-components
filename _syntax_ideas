// noise(20, 20)
// rotate(40) (noise(30, 30))
// rotate(30) (scale(20)) (noise(30, 30))
// trans(50, 30) (scale(40)) (osc(20, 30, 20))
// rotate(eval(t)) (scale(eval(t * 30))

// p("a", "10 10 10").every(5, reverse()).offset(20)
// p("50 56 30").rotate(0.45)

// let ch1 = gain(0.5).reverb(20, 20, 1000);
// addr('a').osc.sin(10, 10, 20).ch1.dac

/*
  let ch1 = noise(20, 20).scale(20).rotate(e(time))
  let texture = rgb(ch1 * 0.5, ch1 * .65, ch1 * 68)
  let ch2 = osc.sin(20, 20, 30).mod(ch1)
  color.to(out)

  osc(10, 20).scale(20).rotate(30)
  osc(10, 20).mod(osc(20))

  noise

  // generator with SCALE, ROTATE, TRANSLATE
*/
